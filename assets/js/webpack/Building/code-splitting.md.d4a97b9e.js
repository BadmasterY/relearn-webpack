(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{139:function(e,a,t){"use strict";t.r(a),function(e){t.d(a,"default",(function(){return i}));var n,c=t(85),p=(t(127),t(0),t(86));function s(){return(s=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function o(e,a){if(null==e)return{};var t,n,c=function(e,a){if(null==e)return{};var t,n,c={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var b,r,m=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(p.b)("div",a)}},l=m("MdAlert"),N={};function i(e){var a=e.components,t=o(e,["components"]);return Object(p.b)("wrapper",s({},N,t,{components:a,mdxType:"MDXLayout"}),Object(p.b)("h2",{className:"__internal",id:"代码拆分"},"代码拆分",Object(p.b)("a",s({parentName:"h2"},{href:"#%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"随着功能的不断添加, ",Object(p.b)("inlineCode",{parentName:"p"},"Web")," 应用程序往往会变得很大。您的网站加载时间越长, 对用户的困扰就越大。在连接速度很慢的移动环境中, 此问题会更加严重。"),Object(p.b)("p",null,"即使拆分捆绑包可以帮助解决问题, 但它并不是唯一的解决方案, 您仍然可能不得不下载大量数据。幸运的是, 由于代码拆分允许在需要时延迟加载代码, 所以可以做得更好。"),Object(p.b)("p",null,"当用户进入应用程序的新视图时, 您可以加载更多代码。您还可以将加载绑定到特定的操作, 例如滚动或单击按钮。您还可以尝试预测用户下一步要做什么, 并根据您的猜测加载代码。这样, 当用户尝试访问该功能时, 该功能将已经存在。"),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"顺便说一句, 可以使用 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 的延迟加载来实现 ",Object(p.b)("inlineCode",{parentName:"p"},"Google")," 的 ",Object(p.b)("a",s({parentName:"p"},{href:"https://developers.google.com/web/fundamentals/performance/prpl-pattern/",target:"_blank"}),"PRPL 模式"),"。",Object(p.b)("inlineCode",{parentName:"p"},"PRPL"),"(推送, 渲染, 预缓存, 延迟加载)在设计时考虑了移动网络。")),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"Philip Walton 的",Object(p.b)("a",s({parentName:"p"},{href:"https://philipwalton.com/articles/idle-until-urgent/",target:"_blank"}),"闲置到紧急技术"),"补充了代码拆分, 使您可以进一步优化应用程序加载性能。这个想法是将工作推迟到将来, 直到其有意义为止。")),Object(p.b)("h3",{className:"__internal",id:"代码拆分格式"},"代码拆分格式",Object(p.b)("a",s({parentName:"h3"},{href:"#%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86%E6%A0%BC%E5%BC%8F","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"可以在 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 中以两种主要方式完成代码拆分: 通过动态 ",Object(p.b)("inlineCode",{parentName:"p"},"import")," 或 ",Object(p.b)("inlineCode",{parentName:"p"},"require.ensure")," 语法。前者用于本书项目, ",Object(p.b)("inlineCode",{parentName:"p"},"require.ensure")," 被认为是旧式语法。"),Object(p.b)("p",null,"目标是最终得到一个按需加载的拆分点。拆分中可以包含其他拆分点, 并且您可以基于拆分来构建整个应用程序。这样做的好处是, 网站的初始负载可以小于其他情况。"),Object(p.b)("p",null,Object(p.b)("img",s({parentName:"p"},{src:"../../Build/code_splite.png",alt:"代码拆分"}))),Object(p.b)("h4",{className:"__internal",id:"动态-import"},"动态 import",Object(p.b)("a",s({parentName:"h4"},{href:"#%E5%8A%A8%E6%80%81-import","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"动态 ",Object(p.b)("inlineCode",{parentName:"p"},"import")," 定义为 ",Object(p.b)("inlineCode",{parentName:"p"},"Promise"),":"),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"import"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token comment"}),'/* webpackChunkName: "optional-name" */')," ",Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"./module"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"then"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token parameter"}),"module")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"catch"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token parameter"}),"error")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 通过注释提供了额外的控制。在该示例中, 我们重命名了结果块。给多个块指定相同的名称会将它们分组到相同的捆绑包中。此外 ",Object(p.b)("inlineCode",{parentName:"p"},"webpackMode"),", ",Object(p.b)("inlineCode",{parentName:"p"},"webpackPrefetch")," 和 ",Object(p.b)("inlineCode",{parentName:"p"},"webpackPreload")," 都是很棒的选择, 因为它们可以让您定义何时触发导入以及浏览器应如何处理。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Mode")," 可让您定义 ",Object(p.b)("inlineCode",{parentName:"p"},"import()")," 上的操作。在可用的选项中, ",Object(p.b)("inlineCode",{parentName:"p"},"weak")," 适用于服务器端渲染(",Object(p.b)("inlineCode",{parentName:"p"},"SSR"),"), 因为使用它意味着 ",Object(p.b)("inlineCode",{parentName:"p"},"Promise")," 将返回 ",Object(p.b)("inlineCode",{parentName:"p"},"reject"),", 除非以其他方式加载模块。在 ",Object(p.b)("inlineCode",{parentName:"p"},"SSR")," 的情况下, 这将是理想的。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Prefetch")," 告诉浏览器将来需要的资源, 而 ",Object(p.b)("inlineCode",{parentName:"p"},"preload")," 意味着浏览器将需要当前页中的资源。根据这些提示, 浏览器可以有选择地合理加载数据。",Object(p.b)("a",s({parentName:"p"},{href:"https://webpack.js.org/api/module-methods/#magic-comments",target:"_blank"}),"Webpack 文档更详细地解释了可用选项"),"。"),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},Object(p.b)("a",s({parentName:"p"},{href:"https://webpack.js.org/plugins/prefetch-plugin/",target:"_blank"}),"webpack.PrefetchPlugin")," 允许您在任何模块级别上使用 ",Object(p.b)("inlineCode",{parentName:"p"},"prefetch"),"。")),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"如果您想让 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 自定义名称或名称中的一部分, ",Object(p.b)("inlineCode",{parentName:"p"},"webpackChunkName")," 接受 ",Object(p.b)("inlineCode",{parentName:"p"},"[index]")," 和 ",Object(p.b)("inlineCode",{parentName:"p"},"[request]")," 占位符。")),Object(p.b)("p",null,"该接口允许组合, 您可以并行加载多个资源:"),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-js"}),"Promise",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"all"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"import"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"lunr"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),",")," ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"import"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"../search_index.json"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"then"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token parameter"}),Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"["),"lunr",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),",")," search",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"]")),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"return")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n      index",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),":")," lunr",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"Index",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"load"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"search",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n      lines",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),":")," search",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"lines",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)("p",null,"上面的代码为每个请求创建单独的捆绑包。如果只需要一个捆绑包, 则必须使用命名或定义中间模块为 ",Object(p.b)("inlineCode",{parentName:"p"},"import"),"。"),Object(p.b)(l,s({message:" ",type:"warning"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"正确配置语法后, 该语法仅适用于 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript"),"。如果使用其他环境, 则可能必须使用以下各节中介绍的替代方法")),Object(p.b)("h3",{className:"__internal",id:"使用动态-import-定义拆分点"},"使用动态 import 定义拆分点",Object(p.b)("a",s({parentName:"h3"},{href:"#%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81-import-%E5%AE%9A%E4%B9%89%E6%8B%86%E5%88%86%E7%82%B9","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"这个想法可以通过设置一个包含字符串的模块来演示, 该字符串将替换演示按钮的文本:"),Object(p.b)("p",null,Object(p.b)("strong",{parentName:"p"},"src/lazy.js")),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"export")," ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"default")," ",Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"Hello from lazy"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)("p",null,"您还需要将应用程序指向这个文件, 这样应用程序就知道通过绑定加载过程来加载它。每当用户碰巧单击按钮时, 都会触发加载过程并替换内容:"),Object(p.b)("p",null,Object(p.b)("strong",{parentName:"p"},"src/component.js")),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"export")," ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"default")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"text ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"Hello world"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"const")," element ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," document",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"createElement"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"div"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  element",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"className ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"rounded bg-red-100 border max-w-md m-4 p-4"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n  element",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"innerHTML ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," text",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n  element",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function-variable function"}),"onclick")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>"),"\n    ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"import"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token string"}),'"./lazy"'),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),"\n      ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"then"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token parameter"}),"lazy"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n        element",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"textContent ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," lazy",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"default",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),"\n      ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"catch"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token parameter"}),"err"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n        console",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(p.b)("span",s({parentName:"code"},{className:"token function"}),"error"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"err",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"return")," element",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)("p",null,"如果运行应用程序(",Object(p.b)("mark",null,"npm start"),")并单击按钮, 您应该会看到其中的新文本。"),Object(p.b)("p",null,"在执行 ",Object(p.b)("inlineCode",{parentName:"p"},"npm run build")," 之后, 您应该看到:"),Object(p.b)("div",{className:"rcpress-highlight has-highlighted-lines","data-language":"bash"},Object(p.b)("pre",s({parentName:"div"},{className:"language-bash"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-bash"}),"⬡ webpack: Build Finished\n⬡ webpack: Hash: e35c7871cc57e0010587\n  Version: webpack ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"5.0"),".0-beta.29\n  Time: ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"14722")," ms\n  Built at: ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"2020"),"-09-21 ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"14"),":31:19\n",Object(p.b)("span",s({parentName:"code"},{className:"rcpress-highlight-code-line"}),"  asset ",Object(p.b)("span",s({parentName:"span"},{className:"token number"}),"34"),".js ",Object(p.b)("span",s({parentName:"span"},{className:"token number"}),"196")," bytes ",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"["),"emitted",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"["),"minimized",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"span"},{className:"token number"}),"1")," related asset"),"  asset index.html ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"237")," bytes ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"emitted",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]"),"\n  asset logo.jpg ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"515")," KiB ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"emitted",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"big",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"auxiliary name: main",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),"\n  asset main.css ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"8.31")," KiB ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"emitted",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"name: main",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"1")," related asset\n  asset main.js ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"16.8")," KiB ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"emitted",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"minimized",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"name: main",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"1")," related asset\n  Entrypoint main ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," main.css main.js ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"logo.jpg main.css.map main.js.map",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),".."),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),".."),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"..")))),Object(p.b)("p",null,"这 ",Object(p.b)("inlineCode",{parentName:"p"},"34.js")," 就是您的分割点。检查文件后发现 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 已将代码包装在一个 ",Object(p.b)("inlineCode",{parentName:"p"},"webpackJsonp")," 块中并处理了代码位。"),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"如果要调整块的名称, 请设置 ",Object(p.b)("inlineCode",{parentName:"p"},"output.chunkFilename"),"。例如, 将其设置为 ",Object(p.b)("inlineCode",{parentName:"p"},'"chunk.[id].js"'),' 将在每个拆分的块之前加上单词 "chunk"。')),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},Object(p.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/bundle-loader",target:"_blank"}),"bundle-loader")," 给出了类似的结果, 但是通过 ",Object(p.b)("inlineCode",{parentName:"p"},"loader")," 接口。它支持通过其 ",Object(p.b)("inlineCode",{parentName:"p"},"name")," 选项给捆绑软件命名。")),Object(p.b)(l,s({message:" ",type:"warning"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"如果使用的是 ",Object(p.b)("inlineCode",{parentName:"p"},"TypeScript"),", 请确保将 ",Object(p.b)("inlineCode",{parentName:"p"},"compilerOptions.module")," 设置为 ",Object(p.b)("inlineCode",{parentName:"p"},"esnext")," 或 ",Object(p.b)("inlineCode",{parentName:"p"},"es2020"),", 以便代码拆分正常工作。")),Object(p.b)("h3",{className:"__internal",id:"在运行时控制代码拆分"},"在运行时控制代码拆分",Object(p.b)("a",s({parentName:"h3"},{href:"#%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E6%8E%A7%E5%88%B6%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"特别是在具有第三方依赖项和高级部署设置的复杂环境中, 您可能希望控制从何处加载拆分代码。",Object(p.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/webpack-require-from",target:"_blank"}),"webpack-require-from")," 旨在解决该问题, 并且能够重写导入路径。"),Object(p.b)("h3",{className:"__internal",id:"react-中的代码拆分"},"React 中的代码拆分",Object(p.b)("a",s({parentName:"h3"},{href:"#react-%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"有一些特定于 ",Object(p.b)("inlineCode",{parentName:"p"},"React")," 的解决方案, 包装在一个小的 ",Object(p.b)("inlineCode",{parentName:"p"},"npm")," 软件包后面:"),Object(p.b)("ul",null,Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),Object(p.b)("a",s({parentName:"li"},{href:"https://www.npmjs.com/package/@loadable/component",target:"_blank"}),"@loadable/component")," 将模式包装在 ",Object(p.b)("inlineCode",{parentName:"li"},"createAsyncComponent")," 调用中, 并提供服务器端渲染的特定功能。"),Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),Object(p.b)("a",s({parentName:"li"},{href:"https://www.npmjs.com/package/react-imported-component",target:"_blank"}),"react-imported-component")," 是另一个基于钩子的全功能解决方案。"),Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),"请参阅 ",Object(p.b)("a",s({parentName:"li"},{href:"https://reactjs.org/docs/code-splitting.html",target:"_blank"}),"React 官方文档"),"以了解开箱即用中包含的代码拆分 ",Object(p.b)("inlineCode",{parentName:"li"},"API"),"。最重要的是 ",Object(p.b)("inlineCode",{parentName:"li"},"React.lazy")," 和 ",Object(p.b)("inlineCode",{parentName:"li"},"React.Suspense"),"。当前, 这些功能不支持服务器端渲染。")),Object(p.b)("h3",{className:"__internal",id:"禁用代码拆分"},"禁用代码拆分",Object(p.b)("a",s({parentName:"h3"},{href:"#%E7%A6%81%E7%94%A8%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"尽管默认情况下, 代码拆分是一种好习惯, 但并非总是正确的, 尤其是在服务器端使用时。因此, 可以使用如下方式禁用:"),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(p.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"const")," config ",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.b)("span",s({parentName:"code"},{className:"token keyword"}),"new")," ",Object(p.b)("span",s({parentName:"code"},{className:"token class-name"}),"webpack",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"."),"optimize",Object(p.b)("span",s({parentName:"span"},{className:"token punctuation"}),"."),"LimitChunkCountPlugin"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n      maxChunks",Object(p.b)("span",s({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",s({parentName:"code"},{className:"token number"}),"1"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"请参阅 ",Object(p.b)("a",s({parentName:"p"},{href:"https://medium.com/@glennreyes/how-to-disable-code-splitting-in-webpack-1c0b1754a3c5",target:"_blank"}),"Glenn Reyes 的详细说明"),"。")),Object(p.b)("h3",{className:"__internal",id:"机器学习驱动的-prefetch"},"机器学习驱动的 prefetch",Object(p.b)("a",s({parentName:"h3"},{href:"#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A9%B1%E5%8A%A8%E7%9A%84-prefetch","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"用户通常以特定方式使用应用程序。这一事实意味着, 即使在用户访问应用程序的特定部分之前, 仍然有必要加载它们。",Object(p.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/guess-webpack",target:"_blank"}),"guess-webpack")," 是基于预测的预加载思想的插件。",Object(p.b)("a",s({parentName:"p"},{href:"https://blog.mgechev.com/2018/03/18/machine-learning-data-driven-bundling-webpack-javascript-markov-chain-angular-react/",target:"_blank"}),"Minko Gechev 在他的文章中详细解释了该方法"),"。"),Object(p.b)("h3",{className:"__internal",id:"结论"},"结论",Object(p.b)("a",s({parentName:"h3"},{href:"#%E7%BB%93%E8%AE%BA","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"代码拆分是一项功能, 可让您进一步提高应用程序的性能。您可以在需要时加载代码, 以加快初始加载时间并改善用户体验, 尤其是在带宽受限的移动环境中。"),Object(p.b)("p",null,"回顾一下:"),Object(p.b)("ul",null,Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),Object(p.b)("strong",{parentName:"li"},"代码拆分"),"需要进行额外的配置, 因为您必须决定拆分哪些内容以及在何处进行拆分。通常, 您会在路由器中找到良好的拆分点。或者您注意到只有在使用特定功能时才需要特定功能。"),Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),"使用命名将单独的拆分点拉入相同的捆绑包中。"),Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),"这些技术可以在像 ",Object(p.b)("inlineCode",{parentName:"li"},"React")," 这样的现代框架和库中使用。您可以将相关逻辑包装到特定组件中。"),Object(p.b)("li",s({parentName:"ul"},{className:"__internal"}),"要禁用代码拆分, 使用 ",Object(p.b)("inlineCode",{parentName:"li"},"webpack.optimize.LimitChunkCountPlugin")," 并将 ",Object(p.b)("inlineCode",{parentName:"li"},"maxChunks")," 设置为 ",Object(p.b)("inlineCode",{parentName:"li"},"1"),"。")),Object(p.b)("p",null,"在下一章中, 您将学习如何在不通过 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 配置的情况下拆分供应商捆绑包。"))}i.isMDXComponent=!0,i=Object(c.hot)(e)(i),(b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(b.register(m,"makeShortcode","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Building/code-splitting.md"),b.register(l,"MdAlert","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Building/code-splitting.md"),b.register(N,"layoutProps","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Building/code-splitting.md"),b.register("wrapper","MDXLayout","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Building/code-splitting.md"),b.register(i,"MDXContent","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Building/code-splitting.md")),(r="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&r(e)}.call(this,t(21)(e))}}]);