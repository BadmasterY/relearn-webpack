(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{149:function(e,a,t){"use strict";t.r(a),function(e){t.d(a,"default",(function(){return N}));var n,b=t(86),p=(t(127),t(0),t(87));function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function r(e,a){if(null==e)return{};var t,n,b=function(e,a){if(null==e)return{};var t,n,b={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(b[t]=e[t]);return b}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(b[t]=e[t])}return b}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var o,s,l=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(p.b)("div",a)}},i=l("MdAlert"),m={};function N(e){var a=e.components,t=r(e,["components"]);return Object(p.b)("wrapper",c({},m,t,{components:a,mdxType:"MDXLayout"}),Object(p.b)("h2",{className:"__internal",id:"什么是webpack"},"什么是webpack",Object(p.b)("a",c({parentName:"h2"},{href:"#%E4%BB%80%E4%B9%88%E6%98%AFwebpack","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 是一个",Object(p.b)("strong",{parentName:"p"},"模块化打包工具"),"。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 可以与一个单独的任务运行器一起进行打包。但是, 由于社区开发的 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 插件, 打包程序(",Object(p.b)("inlineCode",{parentName:"p"},"bundler"),")和任务运行程序(",Object(p.b)("inlineCode",{parentName:"p"},"taskrunner"),")之间的界限变得模糊。有时, 这些插件用于执行通常在 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 之外完成的任务, 例如清理构建目录或部署构建, 尽管您也可以将这些任务推到 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 之外再执行。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"React")," 和 ",Object(p.b)("strong",{parentName:"p"},Object(p.b)("inlineCode",{parentName:"strong"},"Hot Module Replacement")),"(",Object(p.b)("inlineCode",{parentName:"p"},"HMR"),")有助于普及 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack"),", 并使其在 ",Object(p.b)("a",c({parentName:"p"},{href:"https://github.com/rails/webpacker",target:"_blank"}),"Ruby on Rails")," 等其他环境中使用。尽管其名称如此, 但 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 不限于 ",Object(p.b)("inlineCode",{parentName:"p"},"Web")," 开发。它也可以与其他目标捆绑在一起, 如",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/output/targets/",target:"_blank"}),'"构建目标"'),"一章中所述。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"如果您想更详细地了解构建工具及其历史, 请查看",Object(p.b)("a",c({parentName:"p"},{href:"./Appendices/comparison.html"}),'"构建工具比较"'),"附录。")),Object(p.b)("h3",{className:"__internal",id:"webpack依赖于模块"},"Webpack依赖于模块",Object(p.b)("a",c({parentName:"h3"},{href:"#webpack%E4%BE%9D%E8%B5%96%E4%BA%8E%E6%A8%A1%E5%9D%97","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"您可以使用 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 打包的最小项目包括",Object(p.b)("strong",{parentName:"p"},"输入"),"(",Object(p.b)("inlineCode",{parentName:"p"},"input"),")和",Object(p.b)("strong",{parentName:"p"},"输出"),"(",Object(p.b)("inlineCode",{parentName:"p"},"output"),")。打包过程从用户定义的入口(",Object(p.b)("inlineCode",{parentName:"p"},"entries"),")开始。入口本身就是",Object(p.b)("strong",{parentName:"p"},"模块"),", 可以通过 ",Object(p.b)("strong",{parentName:"p"},Object(p.b)("inlineCode",{parentName:"strong"},"import"))," 导入其他模块。"),Object(p.b)("p",null,"当您使用 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 打包项目时, 它会遍历 ",Object(p.b)("inlineCode",{parentName:"p"},"import"),", 构造项目的",Object(p.b)("strong",{parentName:"p"},"依赖图"),", 然后根据配置生成",Object(p.b)("strong",{parentName:"p"},"输出"),"。此外, 可以定义",Object(p.b)("strong",{parentName:"p"},"拆分点"),"以在项目代码本身内创建单独的包。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 在内部使用所谓的",Object(p.b)("strong",{parentName:"p"},"块"),"(",Object(p.b)("inlineCode",{parentName:"p"},"chunks"),")来管理打包过程, 该术语通常出现在与 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 相关的文档中。块是包含在 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 输出中的包中的较小代码段。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 开箱即用地支持 ",Object(p.b)("inlineCode",{parentName:"p"},"ES2015"),", ",Object(p.b)("inlineCode",{parentName:"p"},"CommonJS"),", ",Object(p.b)("inlineCode",{parentName:"p"},"MJS")," 和 ",Object(p.b)("inlineCode",{parentName:"p"},"AMD")," 模块格式。还支持 ",Object(p.b)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/WebAssembly",target:"_blank"}),"WebAssembly"),", 这是在浏览器中运行低级代码的新方法。 ",Object(p.b)("inlineCode",{parentName:"p"},"loader")," 机制也适用于 ",Object(p.b)("inlineCode",{parentName:"p"},"CSS"),", 并通过 ",Object(p.b)("strong",{parentName:"p"},Object(p.b)("inlineCode",{parentName:"strong"},"css-loader"))," 提供 ",Object(p.b)("mark",null,"@import")," 和 ",Object(p.b)("mark",null,"url()")," 支持。您可以找到用于特定任务的插件, 例如 ",Object(p.b)("inlineCode",{parentName:"p"},"minification"),"(压缩), ",Object(p.b)("inlineCode",{parentName:"p"},"internationalization"),"(国际化), ",Object(p.b)("inlineCode",{parentName:"p"},"HMR")," 等。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"依赖图是一种有向图, 它描述节点之间的关系。在这种情况下, 图形的定义是通过文件之间的引用(",Object(p.b)("mark",null,"require"),", ",Object(p.b)("mark",null,"import"),")。 ",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 静态遍历这些内容, 而无需执行源代码来生成创建 ",Object(p.b)("inlineCode",{parentName:"p"},"bundle")," 所需的依赖图。")),Object(p.b)("h3",{className:"__internal",id:"webpack的执行过程"},"Webpack的执行过程",Object(p.b)("a",c({parentName:"h3"},{href:"#webpack%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("img",c({parentName:"p"},{src:"../webpack.webp",alt:"webpack的执行过程"}))),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 从",Object(p.b)("strong",{parentName:"p"},"入口"),"开始。通常, 这些是 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript")," 模块, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 在其中开始遍历过程。在此过程中, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 会根据",Object(p.b)("strong",{parentName:"p"},"加载器"),"配置评估匹配项, 该配置程序会告诉 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 如何转换每个匹配项。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"从 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack 5")," 开始, 支持 ",Object(p.b)("a",c({parentName:"p"},{href:"https://webpack.js.org/configuration/experiments/#experiments",target:"_blank"}),"experiments"),"。这代表隐藏在特性标志后面的未来功能, 并允许早期测试。")),Object(p.b)("h3",{className:"__internal",id:"解析过程"},"解析过程",Object(p.b)("a",c({parentName:"h3"},{href:"#%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("strong",{parentName:"p"},"入口"),"文件本身就是一个模块, 当 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 遇到一个模块时, 它会尝试使用 ",Object(p.b)("mark",null,"resolve")," 配置将模块与文件系统进行匹配。例如, 您可以告诉 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 除了 ",Object(p.b)("mark",null,"node_modules")," 模块外, 还可以对特定目录执行查找。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"可以调整 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 对文件扩展名匹配的方式, 并且可以为目录定义特定的别名。在",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/techniques/consuming/",target:"_blank"}),"使用软件包"),"章节涵盖了更详细的这些想法。")),Object(p.b)("p",null,"如果解析失败, 则 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 将引发运行时错误。如果 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 成功解析文件, 则 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 将根据加载器定义对匹配的文件执行处理。每个加载器针对模块内容应用特定的转换。"),Object(p.b)("p",null,"加载器与已解析文件匹配的方式可以通过多种方式进行配置, 包括按文件类型和文件系统中的位置进行配置。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 的灵活性甚至允许您根据文件导入项目的位置对文件进行特定的转换。"),Object(p.b)("p",null,"对 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 的加载器执行相同的解析过程。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 允许您在确定应该使用哪个加载器时应用类似的逻辑。因此, 加载器拥有自己的解析配置。如果 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 无法执行加载器查找, 则会引发运行时错误。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"要解决此问题, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 依赖于下面的",Object(p.b)("a",c({parentName:"p"},{href:"https://www.npmjs.com/package/enhanced-resolve",target:"_blank"}),"增强解析"),"包。")),Object(p.b)("h3",{className:"__internal",id:"webpack针对任何文件类型进行解析"},"Webpack针对任何文件类型进行解析",Object(p.b)("a",c({parentName:"h3"},{href:"#webpack%E9%92%88%E5%AF%B9%E4%BB%BB%E4%BD%95%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E8%BF%9B%E8%A1%8C%E8%A7%A3%E6%9E%90","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 将解析它在构建依赖关系图时遇到的每个模块。如果入口包含依赖项, 则将针对每个依赖项递归执行该过程, 直到遍历完成。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 可以针对任何文件类型执行此过程, 这与 ",Object(p.b)("inlineCode",{parentName:"p"},"Babel")," 或 ",Object(p.b)("inlineCode",{parentName:"p"},"Sass")," 编译器之类的专用工具不同。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 让您可以控制如何处理它遇到的不同资产。例如, 您可以决定将资产内联到 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript")," 捆绑包中以避免请求。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 还允许您使用 ",Object(p.b)("inlineCode",{parentName:"p"},"CSS")," 模块等技术将样式与组件相结合。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 生态系统充满了扩展其功能的插件。"),Object(p.b)("p",null,"尽管 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 主要用于打包 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript"),", 但它可以捕获图像或字体等资源, 并为它们产出单独的文件。入口只是打包过程的一个起点, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 产出的内容完全取决于配置它的方式。"),Object(p.b)("h3",{className:"__internal",id:"评估流程"},"评估流程",Object(p.b)("a",c({parentName:"h3"},{href:"#%E8%AF%84%E4%BC%B0%E6%B5%81%E7%A8%8B","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"假设找到了所有加载器, 则 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 将从下至上, 从右至左(",Object(p.b)("mark",null,"styleLoader(cssLoader('./main.css'))"),")评估匹配的加载器, 同时依次通过每个加载器运行模块。结果, 您将获得 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 注入到结果包中的输出。",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/loading/loader-definitions/",target:"_blank"}),'"加载器定义"'),"一章详细介绍了该主题。"),Object(p.b)("p",null,"如果加载器评估完成而没有运行时错误, 则 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 会将在捆绑包中包含源代码。尽管加载器可以做很多事情, 但它们不能为高级任务提供足够的动力。插件可以拦截 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 提供的",Object(p.b)("strong",{parentName:"p"},"运行时事件"),"。"),Object(p.b)("p",null,"一个很好的例子是由 ",Object(p.b)("inlineCode",{parentName:"p"},"MiniCssExtractPlugin")," 执行的提取过程, 当与加载器一起使用时, 将 ",Object(p.b)("inlineCode",{parentName:"p"},"CSS")," 文件从捆绑软件中提取出来并分离到一个单独的文件中。没有此步骤, ",Object(p.b)("inlineCode",{parentName:"p"},"CSS")," 将被内联到生成的 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript")," 中, 因为 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 默认将所有代码视为 ",Object(p.b)("inlineCode",{parentName:"p"},"JavaScript"),"。提取思路在",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/styling/separating-css/",target:"_blank"}),'"分离CSS"'),"一章中进行了讨论。"),Object(p.b)("h3",{className:"__internal",id:"完成"},"完成",Object(p.b)("a",c({parentName:"h3"},{href:"#%E5%AE%8C%E6%88%90","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"在评估完每个模块之后, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 会写入 ",Object(p.b)("strong",{parentName:"p"},Object(p.b)("inlineCode",{parentName:"strong"},"output")),"。输出包括一个引导脚本。这是一个小型运行时, 在浏览器中执行结果, 并在 ",Object(p.b)("inlineCode",{parentName:"p"},"manifest")," 清单中列出要加载的包。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Manifest")," 清单可以提取到其自己的文件中, 如本书稍后所述。根据您使用的构建目标, 输出会有所不同(针对 ",Object(p.b)("inlineCode",{parentName:"p"},"web")," 不是唯一的选择)。"),Object(p.b)("p",null,"打包过程还不止这些。例如, 您可以定义特定的拆分点, 其中 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 会根据应用程序逻辑生成单独的包, 并进行加载。在",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/building/code-splitting/",target:"_blank"}),"代码拆分"),"一章中讨论了这个想法。"),Object(p.b)("h3",{className:"__internal",id:"webpack由配置驱动"},"Webpack由配置驱动",Object(p.b)("a",c({parentName:"h3"},{href:"#webpack%E7%94%B1%E9%85%8D%E7%BD%AE%E9%A9%B1%E5%8A%A8","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 的核心在于配置。这是从",Object(p.b)("a",c({parentName:"p"},{href:"https://webpack.js.org/get-started/",target:"_blank"}),"官方webpack教程"),"改编而来的示例, 并扩展了其要点:"),Object(p.b)("p",null,Object(p.b)("strong",{parentName:"p"},"webpack.config.js")),Object(p.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(p.b)("pre",c({parentName:"div"},{className:"language-js"}),Object(p.b)("code",c({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",c({parentName:"code"},{className:"token keyword"}),"const")," webpack ",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",c({parentName:"code"},{className:"token function"}),"require"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"webpack"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),";"),"\n\nmodule",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"."),"exports ",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n  entry",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// Where to start bundling"),"\n    app",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"./entry.js"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  output",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// Where to output"),"\n    ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// Output to the same directory"),"\n    path",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," __dirname",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// Capture name from the entry using a pattern"),"\n    ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// In the example, it will result as app.js."),"\n    filename",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"[name].js"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  module",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// How to resolve encountered imports"),"\n    rules",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"["),"\n      ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n        test",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token regex"}),"/\\.css$/"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n        use",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"style-loader"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"css-loader"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{"),"\n        test",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token regex"}),"/\\.js$/"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n        use",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token string"}),'"babel-loader"'),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n        exclude",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token regex"}),"/node_modules/"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  plugins",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"[")," ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// What extra processing to perform"),"\n    ",Object(p.b)("span",c({parentName:"code"},{className:"token keyword"}),"new")," ",Object(p.b)("span",c({parentName:"code"},{className:"token class-name"}),"webpack",Object(p.b)("span",c({parentName:"span"},{className:"token punctuation"}),"."),"DefinePlugin"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),"...")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  resolve",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token comment"}),"// Adjust module resolution algorithm"),"\n    alias",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),":")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(p.b)("span",c({parentName:"code"},{className:"token operator"}),"...")," ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.b)("span",c({parentName:"code"},{className:"token punctuation"}),";")))),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 的配置模型有时会感到有些不透明, 因为配置文件看起来是相互独立的, 而且很难理解 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 在做什么, 除非您了解其背后的想法。这就是为什么这本书存在的原因, 因为一旦你知道了概念和配置的每个部分在做什么, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 就更有意义了, 你可以从中学到更多。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 的属性定义通常是灵活的, 最好查看文档或 ",Object(p.b)("inlineCode",{parentName:"p"},"TypeScript")," 定义以了解允许的内容。例如, ",Object(p.b)("mark",null,"entry")," 甚至可以是一个函数或一个异步函数。有时有多种方法可以达到相同目的, 这尤其适用于加载器。")),Object(p.b)(i,c({message:" ",type:"warning"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 的插件是从上到下注册的, 但是加载器遵循相反的规则。如果加载器与现有的定义相匹配, 则意味着您将首先对其求值, 然后添加一个与现有 ",Object(p.b)("mark",null,"test")," 匹配的加载器。请参阅",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/loading/loader-definitions/",target:"_blank"}),"加载器定义"),"一章, 以更好地理解其中差异。")),Object(p.b)("h3",{className:"__internal",id:"资源哈希"},"资源哈希",Object(p.b)("a",c({parentName:"h3"},{href:"#%E8%B5%84%E6%BA%90%E5%93%88%E5%B8%8C","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"使用 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack"),", 您可以向每个捆绑包名称注入一个哈希(",Object(p.b)("inlineCode",{parentName:"p"},"hash"),")值(例如 ",Object(p.b)("inlineCode",{parentName:"p"},"app.d587bbd6.js"),"), 以便在更改时使客户端的捆绑包失效。在理想情况下, ",Object(p.b)("strong",{parentName:"p"},"捆绑拆分"),"允许客户机只重新加载一小部分数据。"),Object(p.b)("h3",{className:"__internal",id:"模块热更新hmr"},"模块热更新(HMR)",Object(p.b)("a",c({parentName:"h3"},{href:"#%E6%A8%A1%E5%9D%97%E7%83%AD%E6%9B%B4%E6%96%B0hmr","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"您可能已经熟悉 ",Object(p.b)("a",c({parentName:"p"},{href:"http://livereload.com/",target:"_blank"}),"LiveReload")," 或 ",Object(p.b)("a",c({parentName:"p"},{href:"http://www.browsersync.io/",target:"_blank"}),"BrowserSync")," 之类的工具。这些工具会在您进行更改时自动刷新浏览器。",Object(p.b)("a",c({parentName:"p"},{href:"https://survivejs.com/webpack/appendices/hmr/",target:"_blank"}),"模块热更新"),"(",Object(p.b)("inlineCode",{parentName:"p"},"HMR"),")使事情更进一步。对于 ",Object(p.b)("inlineCode",{parentName:"p"},"React"),", 它允许应用程序保持其状态而无需强制刷新。尽管这听起来并不很特别, 但在实践中却可以带来很大的不同。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"HMR")," 也可以通过 ",Object(p.b)("a",c({parentName:"p"},{href:"https://github.com/milankinen/livereactload",target:"_blank"}),"livereactload")," 在 ",Object(p.b)("inlineCode",{parentName:"p"},"Browserify")," 中使用, 因此它不是 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 独有的功能。"),Object(p.b)("h3",{className:"__internal",id:"代码拆分"},"代码拆分",Object(p.b)("a",c({parentName:"h3"},{href:"#%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,"除了 ",Object(p.b)("inlineCode",{parentName:"p"},"HMR"),", ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 的打包功能还有很多。",Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 允许您以各种方式拆分代码。您甚至可以在应用程序执行时动态加载代码。这种延迟加载非常方便, 特别是对于庞大的应用程序, 因为可以根据需要动态加载依赖项。"),Object(p.b)("p",null,"甚至小型应用程序也可以从",Object(p.b)("strong",{parentName:"p"},"代码拆分"),"中受益, 因为它允许用户更快地获得可用的东西。毕竟, 谁也不会嫌应用程序运行的更快。了解基本技术是值得的。"),Object(p.b)("h3",{className:"__internal",id:"webpack-5"},"Webpack 5",Object(p.b)("a",c({parentName:"h3"},{href:"#webpack-5","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack 5")," 是该工具的新版本, 它承诺进行以下更改:"),Object(p.b)("ul",null,Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),"在开发过程中有更好的缓存行为 —— 现在, 它可以在不同的运行之间重用基于磁盘的缓存。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),"通过",Object(p.b)("a",c({parentName:"li"},{href:"https://survivejs.com/webpack/output/module-federation/",target:"_blank"}),"模块联合"),"支持微前端样式开发, 您可以在本章中进一步了解它。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),"内部 ",Object(p.b)("inlineCode",{parentName:"li"},"API")," (特别是插件)已得到改进, 旧 ",Object(p.b)("inlineCode",{parentName:"li"},"API")," 已被弃用。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),"开发和生产目标具有更好的默认值。例如, 现在 ",Object(p.b)("mark",null,"contenthash")," 将其用于生产, 从而产生可预测的缓存行为。在将哈希值添加到文件名一章中详细讨论了该主题。")),Object(p.b)("p",null,Object(p.b)("a",c({parentName:"p"},{href:"https://github.com/webpack/changelog-v5",target:"_blank"}),"Webpack 5 changelog")," 列出了所有主要更改。除了改进缓存和模块联合之外, 还可以将其视为清理版本。"),Object(p.b)("p",null,"有一个",Object(p.b)("a",c({parentName:"p"},{href:"https://webpack.js.org/migrate/5/",target:"_blank"}),"正式的迁移指南"),", 列出了将项目从 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack 4")," 移植到 ",Object(p.b)("inlineCode",{parentName:"p"},"5")," 所需的所有更改。"),Object(p.b)("p",null,"项目可能会在不对配置进行任何更改的情况下运行, 但是您会收到弃用警告。要找出它们的来源, 请在运行 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 时使用 ",Object(p.b)("mark",null,"node --trace-deprecation node_modules/webpack/bin/webpack.js"),"。"),Object(p.b)("p",null,"在撰写本文时, ",Object(p.b)("inlineCode",{parentName:"p"},"webpack 5")," 处于 ",Object(p.b)("strong",{parentName:"p"},Object(p.b)("inlineCode",{parentName:"strong"},"beta"))," 版, 而本书示例也可以使用它, 尽管您可能偶尔会看到弃用警告。"),Object(p.b)("h3",{className:"__internal",id:"结论"},"结论",Object(p.b)("a",c({parentName:"h3"},{href:"#%E7%BB%93%E8%AE%BA","aria-hidden":!0,className:"anchor"}),"#")),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 具有明显的学习曲线。然而, 考虑到从长远来看它可以节省更多的时间和精力, 这是一个值得学习的工具。为了更好地了解它与其他工具的比较, 请查看",Object(p.b)("a",c({parentName:"p"},{href:"./Appendices/comparison.html"}),'"构建工具比较"'),"附录。"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Webpack")," 不能解决所有问题。然而, 它确实解决了打包的问题。这就使得在开发过程中就少了一个顾虑。"),Object(p.b)("p",null,"总结一下:"),Object(p.b)("ul",null,Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 是一个",Object(p.b)("strong",{parentName:"li"},"模块化打包工具"),", 但是您也可以使用它运行任务。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 依赖于下面的",Object(p.b)("strong",{parentName:"li"},"依赖图"),"。",Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 遍历源代码来构建依赖图, 并使用此信息和配置生成捆绑包。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 依赖于",Object(p.b)("strong",{parentName:"li"},"加载器"),"和",Object(p.b)("strong",{parentName:"li"},"插件"),"。加载器在模块级别上运行, 插件依赖于 ",Object(p.b)("inlineCode",{parentName:"li"},"webpack")," 提供的钩子, 并且具有对其执行过程的最佳访问权限。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 的",Object(p.b)("strong",{parentName:"li"},"配置"),"描述了它该如何转换图片资源以及它该生成怎样的输出。如果使用如",Object(p.b)("strong",{parentName:"li"},"代码拆分"),"之类的功能, 则部分信息可以包含在源代码中。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("strong",{parentName:"li"},"模块热更新"),"(",Object(p.b)("inlineCode",{parentName:"li"},"HMR"),")有助于普及 ",Object(p.b)("inlineCode",{parentName:"li"},"webpack"),"。这个特性可以通过在浏览器中更新代码来增强开发体验, 而不需要刷新整个页面。"),Object(p.b)("li",c({parentName:"ul"},{className:"__internal"}),Object(p.b)("inlineCode",{parentName:"li"},"Webpack")," 可以为文件名生成",Object(p.b)("strong",{parentName:"li"},"哈希值"),", 允许您在内容更改时使过去的包无效。")),Object(p.b)("p",null,"在本书的下一部分中, 您将学习如何使用 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 构造开发配置, 同时了解其基本概念。"),Object(p.b)(i,c({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(p.b)("p",{parentName:"MdAlert"},"如果您仍然不确定为什么需要 ",Object(p.b)("inlineCode",{parentName:"p"},"webpack")," 或为什么需要进行资源打包, 请阅读",Object(p.b)("a",c({parentName:"p"},{href:"http://tinselcity.net/whys/packers",target:"_blank"}),"为什么我要使用webpack?"))),Object(p.b)("blockquote",null,Object(p.b)("p",{parentName:"blockquote"},"译者注: 只要理解本质, 怎么叫 ",Object(p.b)("inlineCode",{parentName:"p"},"loader")," 其实都可以, 看自己喜好, 例如: 加载程序, 装载程序, 加载机, 装载机。本书全部翻译为 ",Object(p.b)("inlineCode",{parentName:"p"},"加载器"),"。")))}N.isMDXComponent=!0,N=Object(b.hot)(e)(N),(o="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(o.register(l,"makeShortcode","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/What-is-webpack.md"),o.register(i,"MdAlert","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/What-is-webpack.md"),o.register(m,"layoutProps","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/What-is-webpack.md"),o.register("wrapper","MDXLayout","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/What-is-webpack.md"),o.register(N,"MDXContent","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/What-is-webpack.md")),(s="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&s(e)}.call(this,t(21)(e))}}]);