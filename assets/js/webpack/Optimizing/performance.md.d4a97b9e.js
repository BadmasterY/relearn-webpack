(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{156:function(e,a,t){"use strict";t.r(a),function(e){t.d(a,"default",(function(){return d}));var n,p=t(85),c=(t(127),t(0),t(86));function b(){return(b=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function r(e,a){if(null==e)return{};var t,n,p=function(e,a){if(null==e)return{};var t,n,p={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||(p[t]=e[t]);return p}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var l,o,i=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",a)}},s=i("MdAlert"),m={};function d(e){var a=e.components,t=r(e,["components"]);return Object(c.b)("wrapper",b({},m,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("h2",{className:"__internal",id:"性能"},"性能",Object(c.b)("a",b({parentName:"h2"},{href:"#%E6%80%A7%E8%83%BD","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Webpack")," 开箱即用的性能通常足以满足小型项目的需要。也就是说, 随着项目规模的扩大, 性能开始达到极限, 这是 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 的问题跟踪器中经常出现的话题。"),Object(c.b)("p",null,"关于优化, 有几个基本规则:"),Object(c.b)("ol",null,Object(c.b)("li",b({parentName:"ol"},{className:"__internal"}),"知道要优化什么。"),Object(c.b)("li",b({parentName:"ol"},{className:"__internal"}),"先执行快速调整。"),Object(c.b)("li",b({parentName:"ol"},{className:"__internal"}),"之后执行更多相关调整。"),Object(c.b)("li",b({parentName:"ol"},{className:"__internal"}),"随时评估影响。")),Object(c.b)("p",null,"有时优化需要付出一定的代价。例如, 您可以为了性能而牺牲内存, 或者最终使配置变得更加复杂。"),Object(c.b)(s,b({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(c.b)("p",{parentName:"MdAlert"},"如果您使用 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 达到内存限制, 则可以通过 ",Object(c.b)("inlineCode",{parentName:"p"},"node --max-old-space-size=4096 node_modules/.bin/wp --mode development")," 这类调用为其分配更多的内存。大小以兆字节为单位, 在示例中, 您将为该进程提供 ",Object(c.b)("inlineCode",{parentName:"p"},"4GB")," 的内存。")),Object(c.b)("h3",{className:"__internal",id:"衡量影响"},"衡量影响",Object(c.b)("a",b({parentName:"h3"},{href:"#%E8%A1%A1%E9%87%8F%E5%BD%B1%E5%93%8D","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"如前一章所讨论的, 生成统计信息可用于度量构建时间。",Object(c.b)("a",b({parentName:"p"},{href:"https://www.npmjs.com/package/speed-measure-webpack-plugin",target:"_blank"}),"speed-measure-webpack-plugin")," 提供了更详细的信息, 因此您可以知道哪些信息在您的过程中花费了大部分时间, 由此来指导您从何处开展提高性能的工作。"),Object(c.b)("p",null,Object(c.b)("a",b({parentName:"p"},{href:"https://webpack.js.org/plugins/profiling-plugin/",target:"_blank"}),"webpack.debug.ProfilingPlugin")," 和 ",Object(c.b)("a",b({parentName:"p"},{href:"https://github.com/jantimon/cpuprofile-webpack-plugin",target:"_blank"}),"cpuprofile-webpack-plugin")," 是类似的选项, 它们能够将插件执行的时间作为可传递给 ",Object(c.b)("inlineCode",{parentName:"p"},"Chrome Inspector")," 的文件发出。后者也会生成火焰图。"),Object(c.b)("h3",{className:"__internal",id:"高级优化"},"高级优化",Object(c.b)("a",b({parentName:"h3"},{href:"#%E9%AB%98%E7%BA%A7%E4%BC%98%E5%8C%96","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"默认情况下, ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 只使用单核处理, 这意味着如果不通过额外的配置或使用其他插件就无法从多核处理器中受益。这就是 ",Object(c.b)("a",b({parentName:"p"},{href:"https://www.npmjs.com/package/thread-loader",target:"_blank"}),"thread-loader")," 和第三方的解决方案(比如 ",Object(c.b)("a",b({parentName:"p"},{href:"https://www.npmjs.com/package/parallel-webpack",target:"_blank"}),"parallel-webpack")," 和 ",Object(c.b)("a",b({parentName:"p"},{href:"https://www.npmjs.com/package/happypack",target:"_blank"}),"HappyPack"),")出现的原因。"),Object(c.b)("h4",{className:"__internal",id:"parallel-webpack--并行运行多个-webpack-实例"},"parallel-webpack — 并行运行多个 webpack 实例",Object(c.b)("a",b({parentName:"h4"},{href:"#parallel-webpack--%E5%B9%B6%E8%A1%8C%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AA-webpack-%E5%AE%9E%E4%BE%8B","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"parallel-webpack"))," 允许您通过两种方式并行 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 配置。假设已将 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 配置定义为数组, 则可以直接并行运行它们。除此之外, ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"parallel-webpack"))," 可以基于给定的 ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"variants"))," 生成构建。"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"variants")," 使您可以同时生成生产和开发版本。它们使您可以创建具有不同 ",Object(c.b)("inlineCode",{parentName:"p"},"target"),"的捆绑包, 以使其易于根据环境使用。当与 ",Object(c.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 结合使用时, ",Object(c.b)("inlineCode",{parentName:"p"},"variants")," 可以用于实现特征标记, 如",Object(c.b)("a",b({parentName:"p"},{href:"./environment-variables"}),'"环境变量"'),"一章中所述。"),Object(c.b)("p",null,"可以使用 ",Object(c.b)("a",b({parentName:"p"},{href:"https://www.npmjs.com/package/worker-farm",target:"_blank"}),"worker-farm")," 来实现基本思想。实际上, ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"parallel-webpack"))," 底层依赖于 ",Object(c.b)("inlineCode",{parentName:"p"},"worker-farm"),"。"),Object(c.b)("p",null,"可以通过将 ",Object(c.b)("inlineCode",{parentName:"p"},"parallel-webpack")," 作为开发依赖项安装到项目中, 然后用 ",Object(c.b)("inlineCode",{parentName:"p"},"parallel-webpack")," 替换 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 命令来使用。"),Object(c.b)("h4",{className:"__internal",id:"thread-loader-和-happypack---模块级并行"},"thread-loader 和 happypack - 模块级并行",Object(c.b)("a",b({parentName:"h4"},{href:"#thread-loader-%E5%92%8C-happypack---%E6%A8%A1%E5%9D%97%E7%BA%A7%E5%B9%B6%E8%A1%8C","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"thread-loader")," 和 ",Object(c.b)("inlineCode",{parentName:"p"},"parallel-webpack")," 允许在模块级别上并行执行。",Object(c.b)("inlineCode",{parentName:"p"},"thread-loader")," 在加载链中使用。但是, ",Object(c.b)("a",b({parentName:"p"},{href:"https://blog.johnnyreilly.com/2018/12/you-might-not-need-thread-loader.html",target:"_blank"}),"使用它并不总是可以保证速度的提高"),"。",Object(c.b)("inlineCode",{parentName:"p"},"happypack")," 是处于维护模式中的一种更复杂的方法, 有必要检查 ",Object(c.b)("inlineCode",{parentName:"p"},"thread-loader")," 的并行化是否不起作用。"),Object(c.b)("h3",{className:"__internal",id:"低级优化"},"低级优化",Object(c.b)("a",b({parentName:"h3"},{href:"#%E4%BD%8E%E7%BA%A7%E4%BC%98%E5%8C%96","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"特定的较低级别的优化可能很好理解。关键是让 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 减少工作量。请考虑以下示例:"),Object(c.b)("ul",null,Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"考虑在开发过程中使用更快的 ",Object(c.b)("inlineCode",{parentName:"li"},"source map")," 类型, 或者跳过。如果您不以任何方式处理代码, 则可以跳过。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"在开发过程中使用 ",Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/@babel/preset-env",target:"_blank"}),"@babel/preset-env")," 代替 ",Object(c.b)("inlineCode",{parentName:"li"},"source map"),", 可以为现代浏览器传输更少的特性, 并使代码更具可读性和更易于调试。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"在开发过程中跳过 ",Object(c.b)("inlineCode",{parentName:"li"},"polyfill"),"。将软件包(例如 ",Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/core-js",target:"_blank"}),"core-js"),")附加到应用程序的开发版本会增加处理开销。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"禁用开发过程中不需要的应用程序部分。编译仅一小部分正在进行的工作可能是一个不错的主意, 因为这样一来您打包的内容就少了。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),Object(c.b)("inlineCode",{parentName:"li"},"Polyfill")," 较少的 ",Object(c.b)("inlineCode",{parentName:"li"},"Node")," 并且不提供任何内容。 例如, 一个软件包正在使用 ",Object(c.b)("inlineCode",{parentName:"li"},"Node")," ",Object(c.b)("inlineCode",{parentName:"li"},"process"),", 如果进行 ",Object(c.b)("inlineCode",{parentName:"li"},"polyfill")," 反而会使包的开销增大。有关默认值, 请",Object(c.b)("a",b({parentName:"li"},{href:"https://webpack.js.org/configuration/node/",target:"_blank"}),"参见 webpack 文档"),"。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"将很少更改的包推送到",Object(c.b)("strong",{parentName:"li"},"动态加载库"),"(DLL)避免不必要的处理。在",Object(c.b)("a",b({parentName:"li"},{href:"https://github.com/webpack/webpack/tree/master/examples/dll-user",target:"_blank"}),"官方的 webpack 示例中"),"有相关内容, 同时 ",Object(c.b)("a",b({parentName:"li"},{href:"https://robertknight.me.uk/posts/webpack-dll-plugins/",target:"_blank"}),"Rob Knight 的博客"),"中进一步解释了这个想法。",Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/autodll-webpack-plugin",target:"_blank"}),"autodll-webpack-plugin")," 可以自动执行该过程, 而这在 ",Object(c.b)("inlineCode",{parentName:"li"},"webpack 5")," 中是多余的。")),Object(c.b)(s,b({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(c.b)("p",{parentName:"MdAlert"},"从 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack 5")," 开始, 可以通过设置 ",Object(c.b)("inlineCode",{parentName:"p"},'cache.type = "filesystem"')," 来启用文件系统级缓存。要使它在配置更改时失效, 您应该设置 ",Object(c.b)("inlineCode",{parentName:"p"},"cache.buildDependencies.config = [__filename]"),"。",Object(c.b)("inlineCode",{parentName:"p"},"Webpack")," 会自动处理构建所监视的所有内容, 包括插件, 加载器和项目文件。")),Object(c.b)("h4",{className:"__internal",id:"加载器的特定优化"},"加载器的特定优化",Object(c.b)("a",b({parentName:"h4"},{href:"#%E5%8A%A0%E8%BD%BD%E5%99%A8%E7%9A%84%E7%89%B9%E5%AE%9A%E4%BC%98%E5%8C%96","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"加载器也有其优化之处:"),Object(c.b)("ul",null,Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"通过在开发过程中跳过加载程序来执行较少的处理。特别是如果您使用的是现代浏览器, 则可以完全跳过使用 ",Object(c.b)("inlineCode",{parentName:"li"},"babel-loader")," 或同等功能的浏览器。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"使用 ",Object(c.b)("inlineCode",{parentName:"li"},"include")," 或者 ",Object(c.b)("inlineCode",{parentName:"li"},"exclude")," 与 ",Object(c.b)("inlineCode",{parentName:"li"},"JavaScript")," 特定的加载器一起使用。除非它已被正确配置, 否则 ",Object(c.b)("inlineCode",{parentName:"li"},"webpack")," 默认遍历 ",Object(c.b)("inlineCode",{parentName:"li"},"node_modules"),", 并在文件上执行 ",Object(c.b)("inlineCode",{parentName:"li"},"babel-loader"),"。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"使用 ",Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/cache-loader",target:"_blank"}),"cache-loader")," 将开销相对庞大的加载器的结果(例如图像处理)缓存到磁盘。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"使用 ",Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/thread-loader",target:"_blank"}),"thread-loader")," 并行执行开销庞大的加载器。鉴于 ",Object(c.b)("inlineCode",{parentName:"li"},"worker")," 在 ",Object(c.b)("inlineCode",{parentName:"li"},"Node")," 中会产生开销, 因此只有在并行化操作繁重时才值得使用 ",Object(c.b)("inlineCode",{parentName:"li"},"thread-loader"),"。")),Object(c.b)("h3",{className:"__internal",id:"在开发过程中优化重新打包效率"},"在开发过程中优化重新打包效率",Object(c.b)("a",b({parentName:"h3"},{href:"#%E5%9C%A8%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%BC%98%E5%8C%96%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85%E6%95%88%E7%8E%87","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"通过将开发配置指向库的精简版本(如 ",Object(c.b)("inlineCode",{parentName:"p"},"React"),"), 可以改进开发过程中的重新处理时间。在 ",Object(c.b)("inlineCode",{parentName:"p"},"React")," 的例子中, 您将失去基于 ",Object(c.b)("inlineCode",{parentName:"p"},"propType")," 的验证, 但是如果重新打包的速度至关重要, 那么这种技术是值得的。"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"module.noParse")," 接受 ",Object(c.b)("inlineCode",{parentName:"p"},"RegExp")," 或 ",Object(c.b)("inlineCode",{parentName:"p"},"RegExps")," 数组。除了告诉 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 不要解析要使用的精简文件之外, 您还必须使用 ",Object(c.b)("inlineCode",{parentName:"p"},"resolve.alias")," 指向 ",Object(c.b)("inlineCode",{parentName:"p"},"React"),"。在",Object(c.b)("a",b({parentName:"p"},{href:"../Techniques/consuming"}),'"使用软件包"'),"一章中详细讨论了该想法。"),Object(c.b)("p",null,"您可以将该想法封装在一个函数中:"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(c.b)("pre",b({parentName:"div"},{className:"language-js"}),Object(c.b)("code",b({parentName:"pre"},{className:"language-js"}),"exports",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"."),Object(c.b)("span",b({parentName:"code"},{className:"token function-variable function"}),"dontParse")," ",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),"=")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"("),Object(c.b)("span",b({parentName:"code"},{className:"token parameter"}),Object(c.b)("span",b({parentName:"span"},{className:"token punctuation"}),"{")," name",Object(c.b)("span",b({parentName:"span"},{className:"token punctuation"}),",")," path ",Object(c.b)("span",b({parentName:"span"},{className:"token punctuation"}),"}")),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),")")," ",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),"=>")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"("),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"{"),"\n  module",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"{"),"\n    noParse",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"["),Object(c.b)("span",b({parentName:"code"},{className:"token keyword"}),"new")," ",Object(c.b)("span",b({parentName:"code"},{className:"token class-name"}),"RegExp"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"("),"path",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),")"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"]"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"}"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n  resolve",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"{"),"\n    alias",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"["),"name",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"]"),Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," path",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"}"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"}"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"}"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),")"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),";")))),Object(c.b)("p",null,"要使用该功能, 您可以按以下方式调用它:"),Object(c.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(c.b)("pre",b({parentName:"div"},{className:"language-js"}),Object(c.b)("code",b({parentName:"pre"},{className:"language-js"}),Object(c.b)("span",b({parentName:"code"},{className:"token function"}),"dontParse"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"("),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"{"),"\n  name",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," ",Object(c.b)("span",b({parentName:"code"},{className:"token string"}),'"react"'),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n  path",Object(c.b)("span",b({parentName:"code"},{className:"token operator"}),":")," path",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"."),Object(c.b)("span",b({parentName:"code"},{className:"token function"}),"resolve"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"("),"\n    __dirname",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),",")," ",Object(c.b)("span",b({parentName:"code"},{className:"token string"}),'"node_modules/react/cjs/react.production.min.js"'),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),")"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),"}"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),")"),Object(c.b)("span",b({parentName:"code"},{className:"token punctuation"}),",")))),Object(c.b)("p",null,"在进行此更改之后, 应用程序的重建速度应该更快, 具体取决于底层实现。该技术也可以应用于生产模式。"),Object(c.b)("p",null,"假设 ",Object(c.b)("inlineCode",{parentName:"p"},"module.noParse")," 接受一个正则表达式, 如果要忽略所有 ",Object(c.b)("inlineCode",{parentName:"p"},"*.min.js")," 文件, 可以将其设置为 ",Object(c.b)("inlineCode",{parentName:"p"},"/\\.min\\.js/"),"。"),Object(c.b)(s,b({message:" ",type:"warning"},{mdxType:"MdAlert"}),Object(c.b)("p",{parentName:"MdAlert"},"并非所有的模块都支持 ",Object(c.b)("inlineCode",{parentName:"p"},"module.noParse"),"。它们不应该包含 ",Object(c.b)("inlineCode",{parentName:"p"},"require"),"、",Object(c.b)("inlineCode",{parentName:"p"},"define")," 或者类似的引用, 这将导致 ",Object(c.b)("inlineCode",{parentName:"p"},"Uncaught ReferenceError: require is not defined")," 错误。")),Object(c.b)("h3",{className:"__internal",id:"webpack-4-性能技巧"},"Webpack 4 性能技巧",Object(c.b)("a",b({parentName:"h3"},{href:"#webpack-4-%E6%80%A7%E8%83%BD%E6%8A%80%E5%B7%A7","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"有多种 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack 4")," 技巧可用于提高性能:"),Object(c.b)("ul",null,Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"如果设置 ",Object(c.b)("inlineCode",{parentName:"li"},"output.futureEmitAssets")," 后, 则启用来自 ",Object(c.b)("inlineCode",{parentName:"li"},"webpack 5")," 的相关逻辑。",Object(c.b)("a",b({parentName:"li"},{href:"https://twitter.com/swyx/status/1218173290579136512",target:"_blank"}),"基于 Shawn Wang"),", 它既减少了内存使用, 又提高了性能。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"有时会出现与版本相关的性能衰退, ",Object(c.b)("a",b({parentName:"li"},{href:"https://medium.com/@kenneth_chau/speeding-up-webpack-typescript-incremental-builds-by-7x-3912ba4c1d15",target:"_blank"}),"Kenneth Chau 为 webPack 4 编制了一份很好的列表"),"。主要思想是使用带有 ",Object(c.b)("inlineCode",{parentName:"li"},"experimentalWatchApi")," 的 ",Object(c.b)("inlineCode",{parentName:"li"},"ts-loader")," 来简化 ",Object(c.b)("inlineCode",{parentName:"li"},"stats.toJson"),", 并设置 ",Object(c.b)("inlineCode",{parentName:"li"},"output.pathinfo")," 为 ",Object(c.b)("inlineCode",{parentName:"li"},"false"),"。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),Object(c.b)("a",b({parentName:"li"},{href:"https://twitter.com/jaredpalmer/status/1265298834906910729",target:"_blank"}),"Jared Palmer 提到"),", 将 ",Object(c.b)("inlineCode",{parentName:"li"},"optimization")," 属性及其 ",Object(c.b)("inlineCode",{parentName:"li"},"splitChunks"),", ",Object(c.b)("inlineCode",{parentName:"li"},"removeAvailableModules")," 和 ",Object(c.b)("inlineCode",{parentName:"li"},"removeEmptyChunks")," 属性设置为 ",Object(c.b)("inlineCode",{parentName:"li"},"false")," 可以提高开发模式下的性能。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),Object(c.b)("a",b({parentName:"li"},{href:"https://www.npmjs.com/package/webpack-plugin-ramdisk",target:"_blank"}),"webpack-plugin-ramdisk")," 将构建输出写入 ",Object(c.b)("inlineCode",{parentName:"li"},"RAM")," 磁盘, 它可以在开发期间以及在您必须执行许多后续构建的情况下提供帮助。")),Object(c.b)("h3",{className:"__internal",id:"结论"},"结论",Object(c.b)("a",b({parentName:"h3"},{href:"#%E7%BB%93%E8%AE%BA","aria-hidden":!0,className:"anchor"}),"#")),Object(c.b)("p",null,"您可以通过多种方式优化 ",Object(c.b)("inlineCode",{parentName:"p"},"webpack")," 的性能。通常, 在转向更复杂的技术之前, 最好先从更容易理解的技术开始。必须使用的确切方法取决于项目。"),Object(c.b)("p",null,"回顾一下:"),Object(c.b)("ul",null,Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"首先从快速实现的高级技术开始。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"较低级的技术更为复杂, 但也会带来更多的好处。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"由于 ",Object(c.b)("inlineCode",{parentName:"li"},"webpack")," 默认使用单个实例运行, 所以并行化是值得的。"),Object(c.b)("li",b({parentName:"ul"},{className:"__internal"}),"特别是在开发过程中, 由于使用现代浏览器, 跳过某些工作是完全可以接受的。")),Object(c.b)(s,b({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(c.b)("p",{parentName:"MdAlert"},Object(c.b)("a",b({parentName:"p"},{href:"https://webpack.js.org/guides/build-performance/",target:"_blank"}),"官方构建性能指南"),"有更多的提示。另请参阅",Object(c.b)("a",b({parentName:"p"},{href:"https://slack.engineering/keep-webpack-fast-a-field-guide-for-better-build-performance-f56a5995e8f1",target:"_blank"}),"保证快速运行 webpack: 提高构建性能的现场指南"),", ",Object(c.b)("a",b({parentName:"p"},{href:"https://blog.box.com/blog/how-we-improved-webpack-build-performance-95/",target:"_blank"}),"我们如何将 webpack 的构建性能提高 95％"),", ",Object(c.b)("a",b({parentName:"p"},{href:"https://medium.com/walmartlabs/webpack-optimization-a-case-study-92b130334b6c",target:"_blank"}),"webpack 的优化 — 一个案例研究")," 和 ",Object(c.b)("a",b({parentName:"p"},{href:"https://developers.google.com/web/fundamentals/performance/webpack/",target:"_blank"}),"Google 的 Web 基本原理"),"。")))}d.isMDXComponent=!0,d=Object(p.hot)(e)(d),(l="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(l.register(i,"makeShortcode","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/performance.md"),l.register(s,"MdAlert","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/performance.md"),l.register(m,"layoutProps","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/performance.md"),l.register("wrapper","MDXLayout","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/performance.md"),l.register(d,"MDXContent","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/performance.md")),(o="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&o(e)}.call(this,t(21)(e))}}]);