(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{154:function(e,a,n){"use strict";n.r(a),function(e){n.d(a,"default",(function(){return i}));var t,c=n(85),o=(n(127),n(0),n(86));function s(){return(s=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function p(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}(t="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&t(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var b,r,m=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",a)}},l=m("MdAlert"),N={};function i(e){var a=e.components,n=p(e,["components"]);return Object(o.b)("wrapper",s({},N,n,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h2",{className:"__internal",id:"环境变量"},"环境变量",Object(o.b)("a",s({parentName:"h2"},{href:"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,"有时代码的一部分应该只在开发期间执行。或者, 您可以在构建中具有尚未准备好投入生产的实验性功能。控制环境变量变得很有价值, 因为您可以使用它们来切换功能。"),Object(o.b)("p",null,"由于 ",Object(o.b)("inlineCode",{parentName:"p"},"JavaScript")," 压缩程序可以删除无效代码(",Object(o.b)("inlineCode",{parentName:"p"},"if(false)"),"), 因此您可以在此思想的基础上构建并编写转换为这种形式的代码。",Object(o.b)("inlineCode",{parentName:"p"},"Webpack")," 的 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 支持替换自由变量, 因此您可以将 ",Object(o.b)("inlineCode",{parentName:"p"},'if (process.env.NODE_ENV === "development")')," 这种类型的代码根据环境转换为 ",Object(o.b)("inlineCode",{parentName:"p"},"if (true)")," 或 ",Object(o.b)("inlineCode",{parentName:"p"},"if (false)"),"。"),Object(o.b)("p",null,"您可以找到依赖此行为的软件包。",Object(o.b)("inlineCode",{parentName:"p"},"React")," 可能是该技术的早期采用者中最著名的例子。使用 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 可以在一定程度上降低 ",Object(o.b)("inlineCode",{parentName:"p"},"React")," 产品构建的大小, 并且您也可以在其他软件包中看到类似的效果。"),Object(o.b)("p",null,"从 ",Object(o.b)("inlineCode",{parentName:"p"},"webpack 4")," 开始, ",Object(o.b)("inlineCode",{parentName:"p"},"process.env.NODE_ENV")," 将基于给定模式在构建内进行设置, 但不会全局设置。要将变量传递给其他工具, 您必须在 ",Object(o.b)("inlineCode",{parentName:"p"},"webpack")," 外部或 ",Object(o.b)("inlineCode",{parentName:"p"},"webpack")," 配置中显式设置它。"),Object(o.b)("h3",{className:"__internal",id:"defineplugin-的基本思想"},"DefinePlugin 的基本思想",Object(o.b)("a",s({parentName:"h3"},{href:"#defineplugin-%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,"为了更好地理解 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 的概念, 请查看以下示例:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"var")," foo",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Not free due to "foo" above, not ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"foo ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Free since you don\'t refer to "bar", ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"bar ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("p",null,"如果您将 ",Object(o.b)("inlineCode",{parentName:"p"},"bar")," 变量替换为字符串 ",Object(o.b)("inlineCode",{parentName:"p"},'"foobar"'),", 则最终将得到如下代码:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"var")," foo",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Not free due to "foo" above, not ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"foo ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Free since you don\'t refer to "bar", ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"foobar"')," ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("p",null,"进一步分析表明, ",Object(o.b)("inlineCode",{parentName:"p"},'"foobar" === "bar"')," === ",Object(o.b)("inlineCode",{parentName:"p"},"false")," 使一个压缩工具给出以下内容:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"var")," foo",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Not free due to "foo" above, not ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"foo ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),'// Free since you don\'t refer to "bar", ok to replace'),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token boolean"}),"false"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("p",null,"压缩工具剔除了该 ",Object(o.b)("inlineCode",{parentName:"p"},"if")," 语句, 因为它已变为无效代码:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"var")," foo",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),"// Not free, not ok to replace"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"foo ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  console",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"log"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"bar"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(o.b)("span",s({parentName:"code"},{className:"token comment"}),"// if (false) means the block can be dropped entirely")))),Object(o.b)("p",null,"剔除是 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 的核心思想, 它允许切换。压缩工具执行分析并切换代码的整个部分。"),Object(o.b)("h3",{className:"__internal",id:"设置-processenvnode_env"},"设置 process.env.NODE_ENV",Object(o.b)("a",s({parentName:"h3"},{href:"#%E8%AE%BE%E7%BD%AE-processenvnode_env","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,"和以前一样, 将此想法封装到一个函数中。由于 ",Object(o.b)("inlineCode",{parentName:"p"},"webpack")," 替换自由变量的方式, 您应该将其推送到 ",Object(o.b)("inlineCode",{parentName:"p"},"JSON.stringify"),"。您最终得到一个类似的字符串 ",Object(o.b)("inlineCode",{parentName:"p"},"'\"demo\"'"),", 然后 ",Object(o.b)("inlineCode",{parentName:"p"},"webpack")," 将其插入它找到的插槽中:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"webpack.parts.js")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),"exports",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function-variable function"}),"setFreeVariable")," ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token parameter"}),"key",Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),",")," value"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=>")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"const")," env ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n  env",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"key",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token constant"}),"JSON"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"stringify"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"value",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n    plugins",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),":")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"new")," ",Object(o.b)("span",s({parentName:"code"},{className:"token class-name"}),"webpack",Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),"."),"DefinePlugin"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"env",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(o.b)("p",null,"将其与配置文件连接:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"webpack.config.js")),Object(o.b)("div",{className:"rcpress-highlight has-highlighted-lines","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"const")," commonConfig ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"merge"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"["),"\n  ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),"\n",Object(o.b)("span",s({parentName:"code"},{className:"rcpress-highlight-code-line"}),"  parts",Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"span"},{className:"token function"}),"setFreeVariable"),Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"span"},{className:"token string"}),'"HELLO"'),Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),",")," ",Object(o.b)("span",s({parentName:"span"},{className:"token string"}),'"hello from config"'),Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),",")),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(o.b)("p",null,"最后, 添加一些替换内容:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"src/component.js")),Object(o.b)("div",{className:"rcpress-highlight has-highlighted-lines","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"rcpress-highlight-code-line"}),Object(o.b)("span",s({parentName:"span"},{className:"token comment"}),'// export default (text = "Hello world") => {')),"\n",Object(o.b)("span",s({parentName:"code"},{className:"rcpress-highlight-code-line"}),Object(o.b)("span",s({parentName:"span"},{className:"token keyword"}),"export")," ",Object(o.b)("span",s({parentName:"span"},{className:"token keyword"}),"default")," ",Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"span"},{className:"token parameter"}),"text ",Object(o.b)("span",s({parentName:"span"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"span"},{className:"token constant"}),"HELLO")),Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"span"},{className:"token operator"}),"=>")," ",Object(o.b)("span",s({parentName:"span"},{className:"token punctuation"}),"{")),"  ",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"const")," element ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," document",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"createElement"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"div"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"..."),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";")))),Object(o.b)("p",null,"如果运行该应用程序, 则应该在按钮上看到一条新消息。"),Object(o.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(o.b)("p",{parentName:"MdAlert"},Object(o.b)("inlineCode",{parentName:"p"},'webpack.EnvironmentPlugin(["NODE_ENV"])')," 是允许您引用环境变量的快捷方式。它在 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 内部使用, 并且您可以通过传递 ",Object(o.b)("inlineCode",{parentName:"p"},"process.env.NODE_ENV")," 实现相同的效果。")),Object(o.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(o.b)("p",{parentName:"MdAlert"},Object(o.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/dotenv-webpack",target:"_blank"}),"dotenv-webpack")," 更进一步, 将环境变量从点文件(",Object(o.b)("inlineCode",{parentName:"p"},".env"),")映射到内部版本使用的 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin"),"。")),Object(o.b)("h3",{className:"__internal",id:"用-babel-替换自由变量"},"用 Babel 替换自由变量",Object(o.b)("a",s({parentName:"h3"},{href:"#%E7%94%A8-babel-%E6%9B%BF%E6%8D%A2%E8%87%AA%E7%94%B1%E5%8F%98%E9%87%8F","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,Object(o.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/babel-plugin-transform-inline-environment-variables",target:"_blank"}),"babel-plugin-transform-inline-environment-variables")," 可用于实现相同的效果。",Object(o.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/babel-plugin-transform-define",target:"_blank"}),"babel-plugin-transform-define")," 和 ",Object(o.b)("a",s({parentName:"p"},{href:"https://www.npmjs.com/package/babel-plugin-minify-replace",target:"_blank"}),"babel-plugin-minify-replace")," 是 ",Object(o.b)("inlineCode",{parentName:"p"},"Babel")," 的其他选择。"),Object(o.b)("h3",{className:"__internal",id:"选择要使用的模块"},"选择要使用的模块",Object(o.b)("a",s({parentName:"h3"},{href:"#%E9%80%89%E6%8B%A9%E8%A6%81%E4%BD%BF%E7%94%A8%E7%9A%84%E6%A8%A1%E5%9D%97","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,"本章讨论的技术可用于根据环境选择整个模块。如上所述, 基于 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 的拆分允许您选择要使用的代码分支和要丢弃的代码分支。这种思想可以用来实现模块级的分支。请考虑以下文件结构:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"txt"},Object(o.b)("pre",s({parentName:"div"},{className:"language-txt"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-txt"}),".\n└── store\n    ├── index.js\n    ├── store.dev.js\n    └── store.prod.js"))),Object(o.b)("p",null,"其思想是根据环境选择 ",Object(o.b)("inlineCode",{parentName:"p"},"store")," 的 ",Object(o.b)("inlineCode",{parentName:"p"},"dev")," 或 ",Object(o.b)("inlineCode",{parentName:"p"},"prod")," 版本。是 ",Object(o.b)("inlineCode",{parentName:"p"},"index.js")," 内的相关工作:"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",s({parentName:"div"},{className:"language-js"}),Object(o.b)("code",s({parentName:"pre"},{className:"language-js"}),Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),"process",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"env",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",s({parentName:"code"},{className:"token constant"}),"NODE_ENV")," ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"===")," ",Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"production"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  module",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"exports ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"require"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"./store.prod"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(o.b)("span",s({parentName:"code"},{className:"token keyword"}),"else")," ",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"{"),"\n  module",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"."),"exports ",Object(o.b)("span",s({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",s({parentName:"code"},{className:"token function"}),"require"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",s({parentName:"code"},{className:"token string"}),'"./store.dev"'),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",s({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Webpack")," 可以根据 ",Object(o.b)("inlineCode",{parentName:"p"},"DefinePlugin")," 声明和此代码选择正确的分支。这里必须使用 ",Object(o.b)("inlineCode",{parentName:"p"},"CommonJS")," 模块导入, 因为 ",Object(o.b)("inlineCode",{parentName:"p"},"ES2015")," 的 ",Object(o.b)("inlineCode",{parentName:"p"},"import")," 不允许动态操作。"),Object(o.b)(l,s({message:" ",type:"info"},{mdxType:"MdAlert"}),Object(o.b)("p",{parentName:"MdAlert"},Object(o.b)("a",s({parentName:"p"},{href:"../Techniques/consuming"}),'"使用软件包"'),"一章中讨论了一种相关技术, 即",Object(o.b)("strong",{parentName:"p"},"别名"),"。")),Object(o.b)(l,s({message:" ",type:"warning"},{mdxType:"MdAlert"}),Object(o.b)("p",{parentName:"MdAlert"},"在复杂的代码段中对 ",Object(o.b)("inlineCode",{parentName:"p"},"process.env.NODE_ENV")," 进行检查时必须小心。",Object(o.b)("a",s({parentName:"p"},{href:"https://blog.johnnyreilly.com/2018/03/its-not-dead-webpack-and-dead-code.html",target:"_blank"}),"Johnny Reilly 举了一个很好的例子来说明一个有问题的案例"),"。")),Object(o.b)("h3",{className:"__internal",id:"结论"},"结论",Object(o.b)("a",s({parentName:"h3"},{href:"#%E7%BB%93%E8%AE%BA","aria-hidden":!0,className:"anchor"}),"#")),Object(o.b)("p",null,"设置环境变量是一种允许您控制源代码在构建中包含哪些路径的技术。"),Object(o.b)("p",null,"回顾一下:"),Object(o.b)("ul",null,Object(o.b)("li",s({parentName:"ul"},{className:"__internal"}),Object(o.b)("inlineCode",{parentName:"li"},"Webpack")," 允许您通过 ",Object(o.b)("inlineCode",{parentName:"li"},"DefinePlugin")," 和 ",Object(o.b)("inlineCode",{parentName:"li"},"EnvironmentPlugin")," 设置环境变量。后者将系统级环境变量映射到源。"),Object(o.b)("li",s({parentName:"ul"},{className:"__internal"}),Object(o.b)("inlineCode",{parentName:"li"},"DefinePlugin")," 基于自由变量进行操作, 并在 ",Object(o.b)("inlineCode",{parentName:"li"},"webpack")," 分析源代码时替换它们。使用 ",Object(o.b)("inlineCode",{parentName:"li"},"Babel")," 插件可以获得类似的结果。"),Object(o.b)("li",s({parentName:"ul"},{className:"__internal"}),"给定压缩工具可以剔除无效代码, 使用插件可以从生成的构建中删除代码。"),Object(o.b)("li",s({parentName:"ul"},{className:"__internal"}),"插件支持模块级模式。通过实现包装器, 您可以选择将哪个文件包含到 ",Object(o.b)("inlineCode",{parentName:"li"},"webpack")," 生成的构建中。"),Object(o.b)("li",s({parentName:"ul"},{className:"__internal"}),"除了这些插件之外, 您还可以找到其他与优化相关的插件, 这些插件可让您以多种方式控制构建结果。")),Object(o.b)("p",null,"为确保构建具有良好的缓存无效行为, 您将在下一章中学习将哈希值包含在生成的文件名中。这样, 客户可以注意到资产是否已更改, 并可以获取更新的版本。"))}i.isMDXComponent=!0,i=Object(c.hot)(e)(i),(b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(b.register(m,"makeShortcode","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/environment-variables.md"),b.register(l,"MdAlert","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/environment-variables.md"),b.register(N,"layoutProps","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/environment-variables.md"),b.register("wrapper","MDXLayout","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/environment-variables.md"),b.register(i,"MDXContent","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Optimizing/environment-variables.md")),(r="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&r(e)}.call(this,n(21)(e))}}]);